syntax = "proto3";

package model;
option go_package = "model";

import "google/protobuf/any.proto";
import "model/shadowsocks.proto";

message Config {
    repeated InboundObject inbounds = 1;
    repeated OutboundObject outbounds = 2;
    ApiObject api = 3;
    RoutingObject routing = 4;
    LogObject log = 5;
    DnsObject dns = 6;
}

message InboundObject {
    message SniffingObject {
        bool enabled = 1;
        repeated string destOverride = 2;
    }

    string listen = 1;
    uint32 port = 2;
    string protocol = 3;
    google.protobuf.Any settings = 4;
    StreamSettingsObject streamSettings = 5;
    string tag = 6;
    SniffingObject sniffing = 7;
    google.protobuf.Any allocate = 8;
}

message OutboundObject {
    string sendThrough = 1;
    string protocol = 2;
    google.protobuf.Any settings = 3;
    string tag = 4;
    StreamSettingsObject streamSettings = 5;
    google.protobuf.Any proxySettings = 6;
    google.protobuf.Any mux = 7;
}

message ApiObject {
    string tag = 1;
    repeated string services = 2;
}

message RoutingObject {
    message RuleObject {
        repeated string domain = 1;
        repeated string ip = 2;
        uint32 port = 3;
        string network = 4;
        repeated string source = 5;
        repeated string inboundTag = 6;
        repeated string protocol = 7;
        string attrs = 8;
        string outboundTag = 9;
        string balancerTag = 10;
        string type = 11;
    }

    string domainStrategy = 1;
    repeated RuleObject rules = 2;
    repeated google.protobuf.Any balancers = 3;
}

message LogObject {
    string access = 1;
    string error = 2;
    string loglevel = 3;
}

message DnsObject {
    message ServerObject {
        string address = 1;
        uint32 port = 2;
        repeated string domains = 3;
        repeated string expectIPs = 4;
    }

    map<string, string> hosts = 1;
    repeated ServerObject servers = 2;
    string clientIp = 3;
    string tag = 4;
}
